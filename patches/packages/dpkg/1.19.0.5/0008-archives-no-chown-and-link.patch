diff -Naur a/src/archives.c b/src/archives.c
--- a/src/archives.c	2018-01-13 06:37:46.000000000 +0300
+++ b/src/archives.c	2018-05-29 14:44:08.116029894 +0300
@@ -2,7 +2,7 @@
  * dpkg - main program for package management
  * archives.c - actions that process archive files, mainly unpack
  *
- * Copyright © 1994,1995 Ian Jackson <ijackson@chiark.greenend.org.uk>
+ * Copyright © 1994,1995,2018 Ian Jackson <ijackson@chiark.greenend.org.uk>
  * Copyright © 2000 Wichert Akkerman <wakkerma@debian.org>
  * Copyright © 2007-2015 Guillem Jover <guillem@debian.org>
  * Copyright © 2011 Linaro Limited
@@ -63,6 +63,10 @@
 #include "filters.h"
 #include "infodb.h"
 
+/* todo: remove when libcrystax fixed */
+#undef SYNC_FILE_RANGE_WRITE
+#undef SYNC_FILE_RANGE_WAIT_BEFORE
+
 static inline void
 fd_writeback_init(int fd)
 {
@@ -389,8 +393,6 @@
             namenode->statoverride->uid,
             namenode->statoverride->gid,
             namenode->statoverride->mode);
-    if (fchown(fd, st->uid, st->gid))
-      ohshite(_("error setting ownership of '%.255s'"), te->name);
     if (fchmod(fd, st->mode & ~S_IFMT))
       ohshite(_("error setting permissions of '%.255s'"), te->name);
 
@@ -501,12 +503,7 @@
   if (te->type == TAR_FILETYPE_FILE)
     return; /* Already handled using the file descriptor. */
 
-  if (te->type == TAR_FILETYPE_SYMLINK) {
-    if (lchown(path, st->uid, st->gid))
-      ohshite(_("error setting ownership of symlink '%.255s'"), path);
-  } else {
-    if (chown(path, st->uid, st->gid))
-      ohshite(_("error setting ownership of '%.255s'"), path);
+  if (te->type != TAR_FILETYPE_SYMLINK) {
     if (chmod(path, st->mode & ~S_IFMT))
       ohshite(_("error setting permissions of '%.255s'"), path);
   }
@@ -1036,12 +1033,10 @@
       varbuf_end_str(&symlinkfn);
       if (symlink(symlinkfn.buf,fnametmpvb.buf))
         ohshite(_("unable to make backup symlink for '%.255s'"), ti->name);
-      if (lchown(fnametmpvb.buf,stab.st_uid,stab.st_gid))
-        ohshite(_("unable to chown backup symlink for '%.255s'"), ti->name);
       tarobject_set_se_context(fnamevb.buf, fnametmpvb.buf, stab.st_mode);
     } else {
       debug(dbg_eachfiledetail, "tarobject nondirectory, 'link' backup");
-      if (link(fnamevb.buf,fnametmpvb.buf))
+      if (rename(fnamevb.buf,fnametmpvb.buf))
         ohshite(_("unable to make backup link of '%.255s' before installing new version"),
                 ti->name);
     }
