From 43211251e9cfef8a5ecfd9440266a9e4adda82b6 Mon Sep 17 00:00:00 2001
From: vmurashev <vitaly.murashev@gmail.com>
Date: Mon, 19 Dec 2016 21:01:24 +0300
Subject: [PATCH 2/3] test/exec.cpp - register builtin module before call
 'Py_Initialize'

---
 libs/python/test/exec.cpp | 24 ++++++++++++++----------
 1 file changed, 14 insertions(+), 10 deletions(-)

diff --git a/libs/python/test/exec.cpp b/libs/python/test/exec.cpp
index 9fb005ea..c2e0b1e 100644
--- a/libs/python/test/exec.cpp
+++ b/libs/python/test/exec.cpp
@@ -58,16 +58,6 @@ void eval_test()
 
 void exec_test()
 {
-  // Register the module with the interpreter
-  if (PyImport_AppendInittab(const_cast<char*>("embedded_hello"),
-#if PY_VERSION_HEX >= 0x03000000 
-                             PyInit_embedded_hello 
-#else 
-                             initembedded_hello 
-#endif 
-                             ) == -1) 
-    throw std::runtime_error("Failed to add embedded_hello to the interpreter's "
-                 "builtin modules");
   // Retrieve the main module
   python::object main = python::import("__main__");
   
@@ -152,6 +142,20 @@ int main(int argc, char **argv)
 {
   BOOST_TEST(argc == 2 || argc == 3);
   std::string script = argv[1];
+
+  // Register the module with the interpreter
+  if (PyImport_AppendInittab(const_cast<char*>("embedded_hello"),
+#if PY_VERSION_HEX >= 0x03000000
+                             PyInit_embedded_hello
+#else
+                             initembedded_hello
+#endif
+                             ) == -1)
+  {
+    BOOST_ERROR("Failed to add embedded_hello to the interpreter's "
+                 "builtin modules");
+  }
+
   // Initialize the interpreter
   Py_Initialize();
 
-- 
2.9.3

